<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/p
       http://www.springframework.org/schema/p/spring-p.xsd
        http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- 扫描service包下所有使用注解的类型 -->
    <context:component-scan base-package="com.spx.service"/>

    <!-- 配置数据库相关参数properties的属性：${url} -->
    <context:property-placeholder location="classpath:db.properties"/>


    <!-- 数据库连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="connectionInitSqls" value="set names utf8mb4;"/>
        <!--<property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>-->
        <!--<property name="minPoolSize" value="${c3p0.minPoolSize}"/>-->
        <!--<property name="autoCommitOnClose" value="${c3p0.autoCommitOnClose}"/>-->
        <!--<property name="checkoutTimeout" value="${c3p0.checkoutTimeout}"/>-->
        <!--<property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}"/>-->
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            　　helperDialect=mysql
                        </value>
                    </property>
                </bean>
            </array>
        </property>
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 别名 -->
        <property name="typeAliasesPackage" value="com.lhw.entity"></property>
        <!-- sql映射文件路径 -->
        <property name="mapperLocations" value="classpath*:com/spx/mapper/*Mapper.xml"/>
    </bean>
    <!-- 配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描Dao接口包 -->
        <property name="basePackage" value="com.spx.dao"/>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

<!--    &lt;!&ndash; 配置基于注解的声明式事务 &ndash;&gt;-->
<!--    <tx:annotation-driven transaction-manager="transactionManager"/>-->
<!--    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">-->
<!--        <property name="connectionFactory"   ref="jedisConnFactory" />-->
<!--        <property name="keySerializer">-->
<!--            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>-->
<!--        </property>-->
<!--        <property name="valueSerializer">-->
<!--            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"></bean>-->
<!--        </property>-->
<!--    </bean>-->

<!--    <bean id="jedisConnFactory"-->
<!--          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"-->
<!--          p:host-name="${redis.host}"-->
<!--          p:port="${redis.port}"-->
<!--          p:poolConfig-ref="poolConfig"-->
<!--          p:use-pool="true"/>-->

<!--    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
<!--        &lt;!&ndash;最大空闲连接数&ndash;&gt;-->
<!--        <property name="maxIdle" value="${redis.maxIdle}"></property>-->
<!--        <property name="maxWaitMillis" value="${redis.maxWait}"></property>-->
<!--        <property name="maxTotal" value="${redis.maxActive}"></property>-->
<!--    </bean>-->

</beans>